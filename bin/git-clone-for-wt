#!/bin/bash
# Script to create a bare repo for use with multiple worktrees that track remotes.
# Reference that was used to create this:
# https://stackoverflow.com/questions/54367011/git-bare-repositories-worktrees-and-tracking-branches
# https://morgan.cugerone.com/blog/workarounds-to-git-worktree-using-bare-repository-and-cannot-fetch-remote-branches/

trap exit ERR

gitCloneArgs=()
while [[ $1 != "--" ]] && [[ $# -gt 2 ]]; do
    gitCloneArgs+=("$1")
    shift
done

if [ $1 = '--' ]; then
    gitCloneArgs+=("$1")
    shift
fi
if [[ ! $1 =~ .*\.git ]]; then
    gitCloneArgs+=("$1")
    shift
fi

repoUrl=$1
basename=${repoUrl##*/}
name=${2:-${basename%.*}}

shift $#
set -- "${gitCloneArgs[@]}"

echo "Creating directory $name as worktree root to bare clone"
mkdir $name
cd "$name"

# core.worktreeBare=true - used as flag for custom git-prompt code
git clone --config core.worktreeBare=true --bare $@ "$repoUrl" .bare 
echo "gitdir: .bare" > .git

remoteName=$(git remote)

git config remote.$remoteName.fetch "+refs/heads/*:refs/remotes/$remoteName/*"
git fetch $remoteName
git for-each-ref --format='%(refname:short)' refs/heads |  xargs -n1 -I{} git branch --set-upstream-to=$remoteName/{} {}
